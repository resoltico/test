{
  "title": "web2json",
  "content": [
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "Guides Example Guide"
        },
        {
          "text": "Reference Example Reference"
        },
        {
          "text": "Tools Black Blank Screen Open Terminal in Folder web2json"
        }
      ]
    },
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "Overview"
        },
        {
          "text": "What it Does"
        },
        {
          "text": "Why JSON?"
        },
        {
          "text": "Requirements",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Python Requirements"
            },
            {
              "text": "Checking Your Python Installation"
            },
            {
              "text": "Installing Python"
            }
          ]
        },
        {
          "text": "Installation",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "macOS Users: Recommended Setup"
            },
            {
              "text": "Windows Users: Recommended Setup"
            }
          ]
        },
        {
          "text": "Using web2json",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Basic Command Arguments"
            },
            {
              "text": "Output Options"
            },
            {
              "text": "Debug Options"
            }
          ]
        },
        {
          "text": "Understanding the Output",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Basic Output Structure"
            },
            {
              "text": "Content Elements"
            },
            {
              "text": "Metadata"
            },
            {
              "text": "Style Preservation"
            },
            {
              "text": "Examples"
            }
          ]
        },
        {
          "text": "Project Structure"
        },
        {
          "text": "About web2json"
        },
        {
          "text": "Need Help?"
        },
        {
          "text": "Coffee!"
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": "On this page"
    },
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "Overview"
        },
        {
          "text": "What it Does"
        },
        {
          "text": "Why JSON?"
        },
        {
          "text": "Requirements",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Python Requirements"
            },
            {
              "text": "Checking Your Python Installation"
            },
            {
              "text": "Installing Python"
            }
          ]
        },
        {
          "text": "Installation",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "macOS Users: Recommended Setup"
            },
            {
              "text": "Windows Users: Recommended Setup"
            }
          ]
        },
        {
          "text": "Using web2json",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Basic Command Arguments"
            },
            {
              "text": "Output Options"
            },
            {
              "text": "Debug Options"
            }
          ]
        },
        {
          "text": "Understanding the Output",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Basic Output Structure"
            },
            {
              "text": "Content Elements"
            },
            {
              "text": "Metadata"
            },
            {
              "text": "Style Preservation"
            },
            {
              "text": "Examples"
            }
          ]
        },
        {
          "text": "Project Structure"
        },
        {
          "text": "About web2json"
        },
        {
          "text": "Need Help?"
        },
        {
          "text": "Coffee!"
        }
      ]
    },
    {
      "type": "paragraph",
      "text": "Welcome to web2json, a tool for converting web pages into structured JSON format. This documentation will guide you through almost everything you need to know about installing and using this multi-module Python package."
    },
    {
      "type": "heading",
      "level": 2,
      "text": "What it Does"
    },
    {
      "type": "paragraph",
      "text": "web2json is a tool that transforms web pages into structured JSON data. This is useful for:"
    },
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "Content analysis and data mining: Extract and analyze web content easily"
        },
        {
          "text": "Archival and offline access: Save web content in a standardized format"
        },
        {
          "text": "Integration with data processing pipelines: Feed web content into your data workflows"
        },
        {
          "text": "Content transformation and republishing: Reformat web content for different purposes"
        },
        {
          "text": "Machine learning dataset preparation: Create structured data for training models"
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": "Why JSON?"
    },
    {
      "type": "paragraph",
      "text": "JSON (JavaScript Object Notation) is used because it‚Äôs:"
    },
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "A structured format that‚Äôs easy to parse"
        },
        {
          "text": "Language-agnostic, working with virtually any programming language"
        },
        {
          "text": "Ideal for APIs and data processing"
        },
        {
          "text": "Able to preserve content hierarchy and relationships"
        },
        {
          "text": "Perfect for selective content extraction"
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": "Requirements"
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Python Requirements"
    },
    {
      "type": "paragraph",
      "text": "web2json requires Python 3.6 or higher. The latest stable version is recommended."
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Checking Your Python Installation"
    },
    {
      "type": "paragraph",
      "text": "To check if Python is installed and which version you have, open a terminal or command prompt and type:"
    },
    {
      "type": "table",
      "headers": [
        "üçé macOS",
        "ü™ü Windows"
      ],
      "rows": [
        [
          "python3 --version",
          "python --version"
        ]
      ]
    },
    {
      "type": "paragraph",
      "text": "If a command shows a version number at or above 3.6, you‚Äôre ready to go. If not, you‚Äôll need to install or update Python."
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Installing Python"
    },
    {
      "type": "heading",
      "level": 4,
      "text": "macOS"
    },
    {
      "type": "paragraph",
      "text": "Using Homebrew:"
    },
    {
      "type": "code_block",
      "text": "brew install python"
    },
    {
      "type": "code_block",
      "text": "brew install python"
    },
    {
      "type": "code_block",
      "text": "brew install python"
    },
    {
      "type": "heading",
      "level": 4,
      "text": "Windows"
    },
    {
      "type": "paragraph",
      "text": "The following steps assume that you are using Windows 11 with the latest updates."
    },
    {
      "type": "list",
      "list_type": "ordered",
      "level": 1,
      "items": [
        {
          "text": "Launch Command Prompt (Hint: type cmd in Search)"
        },
        {
          "text": "In Command Prompt type python and hit Enter"
        },
        {
          "text": "This should launch Microsoft Store app and offer you to get Python"
        },
        {
          "text": "Get Python and wait for it to install"
        },
        {
          "text": "Verify your installation by typing python --version in Command Prompt"
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": "Installation"
    },
    {
      "type": "paragraph",
      "text": "This guide provides step-by-step instructions for installing web2json on both macOS and Windows systems. We‚Äôll use a consistent approach with command-line instructions for both operating systems, making the process straightforward even for beginners."
    },
    {
      "type": "paragraph",
      "text": "In this process, we will use a Python virtual environment (venv). A virtual environment acts as a special container for your Python programs; it keeps web2json and its required components separate from other Python programs on your computer. Think of it as giving web2json its own private room instead of sharing space with others."
    },
    {
      "type": "paragraph",
      "text": "This separation helps:"
    },
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "Prevent conflicts between different Python programs"
        },
        {
          "text": "Ensure web2json has exactly the right components it needs"
        },
        {
          "text": "Make it easier to manage updates and changes"
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": "macOS Users: Recommended Setup"
    },
    {
      "type": "paragraph",
      "text": "We will set up web2json in your Home folder, within a subfolder named Tools. The steps are as follows:"
    },
    {
      "type": "list",
      "list_type": "ordered",
      "level": 1,
      "items": [
        {
          "text": "Download the latest release from GitHub",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Save this archive file to your Downloads folder"
            }
          ]
        },
        {
          "text": "Open Terminal",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Open it via Applications ‚Üí Utilities ‚Üí Terminal, or use Spotlight with Command+Space and type ‚ÄúTerminal‚Äù"
            }
          ]
        },
        {
          "text": "Create a suitable folder structure Terminal windowmkdir -p ~/Tools",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Create a Tools folder if it doesn‚Äôt exist:"
            }
          ]
        },
        {
          "text": "Unarchive the downloaded package Terminal windowcd ~/Downloads Terminal windowtar -xzvf web2json.tar.gz",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Navigate to your Downloads folder:"
            }
          ]
        },
        {
          "text": "Move the files to your Tools folder Terminal windowmv web2json ~/Tools/web2json"
        },
        {
          "text": "Navigate to the web2json folder Terminal windowcd ~/Tools/web2json"
        },
        {
          "text": "Set up a virtual environment Terminal windowpython3 -m venv .venv"
        },
        {
          "text": "Activate the virtual environment Terminal windowsource .venv/bin/activate",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "You should see (.venv) at the beginning of your command prompt"
            }
          ]
        },
        {
          "text": "Install the package with dependencies Terminal windowpip install -e .",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "This installs web2json with required dependencies"
            }
          ]
        },
        {
          "text": "Create a shell function",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "This will allow web2json to run from anywhere"
            },
            {
              "text": "This assumes you are using the Z shell (Zsh), which is a default shell since macOS 10.15:",
              "type": "sublist",
              "list_type": "unordered",
              "items": [
                {
                  "text": "Open your ~/.zshrc file, for example via nano ~/.zshrc"
                },
                {
                  "text": "Add this shell function: web2json() { (cd ~/Tools/web2json && source .venv/bin/activate && python -m web2json \"$@\" && deactivate)}"
                },
                {
                  "text": "Reload the shell via source ~/.zshrc or launch a new Terminal instance"
                }
              ]
            }
          ]
        },
        {
          "text": "Test your installation (after restarting) Terminal windowweb2json -u https://resoltico.com/en/tools/web2json/ -o test_output",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Launch Terminal"
            },
            {
              "text": "Execute this command to verify the set up:"
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Windows Users: Recommended Setup"
    },
    {
      "type": "paragraph",
      "text": "Note: If you‚Äôre unsure whether Python is installed on your system, please refer to the Requirements section above before proceeding further. We will set up web2json in your Home folder, within a subfolder named Tools. The steps are as follows:"
    },
    {
      "type": "list",
      "list_type": "ordered",
      "level": 1,
      "items": [
        {
          "text": "Download the latest release from GitHub",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Save this archive file to your Downloads folder"
            }
          ]
        },
        {
          "text": "Open Command Prompt",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Press Windows+R, type ‚Äúcmd‚Äù, and press Enter"
            }
          ]
        },
        {
          "text": "Create a suitable folder structure Terminal windowmkdir %USERPROFILE%\\Tools",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Create a Tools folder if it doesn‚Äôt exist:"
            }
          ]
        },
        {
          "text": "Unarchive the downloaded package Terminal windowcd %USERPROFILE%\\Downloads Terminal windowtar -xzvf web2json.tar.gz",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Navigate to your Downloads folder:"
            }
          ]
        },
        {
          "text": "Move the extracted contents to your Tools folder Terminal windowmove \"web2json\" \"%USERPROFILE%\\Tools\\web2json\""
        },
        {
          "text": "Navigate to the web2json folder Terminal windowcd %USERPROFILE%\\Tools\\web2json"
        },
        {
          "text": "Set up a virtual environment Terminal windowpython -m venv .venv"
        },
        {
          "text": "Activate the virtual environment Terminal window.venv\\Scripts\\activate",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "You should see (.venv) at the beginning of your command prompt"
            }
          ]
        },
        {
          "text": "Install the package with dependencies Terminal windowpip install -e .",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "This installs web2json with required dependencies"
            }
          ]
        },
        {
          "text": "Run the Windows setup script"
        }
      ]
    },
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "This creates a system-wide batch file that makes web2json accessible from anywhere"
        },
        {
          "text": "The script also adds the Tools directory to your PATH environment variable"
        }
      ]
    },
    {
      "type": "code_block",
      "text": "python windows_setup.py"
    },
    {
      "type": "code_block",
      "text": "python windows_setup.py"
    },
    {
      "type": "code_block",
      "text": "python windows_setup.py"
    },
    {
      "type": "list",
      "list_type": "ordered",
      "level": 1,
      "items": [
        {
          "text": "IMPORTANT: Restart your computer",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Windows requires a system restart for PATH changes to take effect"
            },
            {
              "text": "Without restarting, new Command Prompt windows won‚Äôt recognize the web2json command"
            },
            {
              "text": "This is a limitation of how Windows handles environment variables"
            }
          ]
        },
        {
          "text": "Alternative methods until you restart",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "If you want to use web2json before restarting, you have these options:",
              "type": "sublist",
              "list_type": "unordered",
              "items": [
                {
                  "text": "Use the full path: %USERPROFILE%\\Tools\\web2json.bat -u https://example.com/article"
                },
                {
                  "text": "Navigate to the Tools directory first: cd %USERPROFILE%\\Tools"
                }
              ]
            }
          ]
        },
        {
          "text": "Test your installation (after restarting) Terminal windowweb2json -u https://resoltico.com/en/tools/web2json/ -o test_output",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "Launch Command Prompt"
            },
            {
              "text": "Execute this command to verify the set up:"
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": "Using web2json"
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Basic Command Arguments"
    },
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "-u or --url: Process a single webpage Terminal windowweb2json -u https://example.com/article"
        },
        {
          "text": "-f or --file: Process multiple URLs from a text file (one URL per line) Terminal windowweb2json -f urls.txt",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "In the above command, web2json will look for the urls.txt file inside its installation folder (i.e. \\Tools\\web2json\\urls.txt). Alternatively, you can also specify the path, for example: web2json -f ~/Downloads/urls.txt on macOS or web2json -f %USERPROFILE%\\Downloads/urls.txt on Windows."
            }
          ]
        },
        {
          "text": "-o or --output: Set custom output name for the JSON file Terminal windowweb2json -u https://example.com/article -o my_article"
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Output Options"
    },
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "--output-dir: Change where files are saved (default: fetched_jsons directory inside installation folder)",
          "type": "sublist",
          "list_type": "unordered",
          "items": [
            {
              "text": "macOS example Terminal windowweb2json -u https://example.com --output-dir ~/Downloads"
            },
            {
              "text": "Windows example Terminal windowweb2json -u https://example.com --output-dir %USERPROFILE%\\Downloads"
            }
          ]
        },
        {
          "text": "--preserve-styles: Keep HTML styling (bold, italic, etc.) in the output Terminal windowweb2json -u https://example.com --preserve-styles"
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Debug Options"
    },
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "-v or --verbose : Show detailed progress information Terminal windowweb2json -u https://example.com -v"
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": "Understanding the Output"
    },
    {
      "type": "paragraph",
      "text": "web2json converts HTML documents into a structured JSON format that preserves content hierarchy while providing consistent, easy-to-process data structures."
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Basic Output Structure"
    },
    {
      "type": "paragraph",
      "text": "The script creates JSON files with this structure:"
    },
    {
      "type": "code_block",
      "text": "{    \"title\": \"Page Title\",    \"content\": [        {            \"type\": \"heading\",            \"level\": 1,            \"text\": \"Main Heading\"        },        {            \"type\": \"paragraph\",            \"text\": \"Article content...\"        }    ],    \"metadata\": {        \"fetched_at\": \"2025-01-18 22:18:18\",        \"url\": \"https://example.com/article\",        \"preserve_styles\": false    }}"
    },
    {
      "type": "code_block",
      "text": "{    \"title\": \"Page Title\",    \"content\": [        {            \"type\": \"heading\",            \"level\": 1,            \"text\": \"Main Heading\"        },        {            \"type\": \"paragraph\",            \"text\": \"Article content...\"        }    ],    \"metadata\": {        \"fetched_at\": \"2025-01-18 22:18:18\",        \"url\": \"https://example.com/article\",        \"preserve_styles\": false    }}"
    },
    {
      "type": "code_block",
      "text": "{"
    },
    {
      "type": "code_block",
      "text": "    \"title\": \"Page Title\","
    },
    {
      "type": "code_block",
      "text": "    \"content\": ["
    },
    {
      "type": "code_block",
      "text": "        {"
    },
    {
      "type": "code_block",
      "text": "            \"type\": \"heading\","
    },
    {
      "type": "code_block",
      "text": "            \"level\": 1,"
    },
    {
      "type": "code_block",
      "text": "            \"text\": \"Main Heading\""
    },
    {
      "type": "code_block",
      "text": "        },"
    },
    {
      "type": "code_block",
      "text": "        {"
    },
    {
      "type": "code_block",
      "text": "            \"type\": \"paragraph\","
    },
    {
      "type": "code_block",
      "text": "            \"text\": \"Article content...\""
    },
    {
      "type": "code_block",
      "text": "        }"
    },
    {
      "type": "code_block",
      "text": "    ],"
    },
    {
      "type": "code_block",
      "text": "    \"metadata\": {"
    },
    {
      "type": "code_block",
      "text": "        \"fetched_at\": \"2025-01-18 22:18:18\","
    },
    {
      "type": "code_block",
      "text": "        \"url\": \"https://example.com/article\","
    },
    {
      "type": "code_block",
      "text": "        \"preserve_styles\": false"
    },
    {
      "type": "code_block",
      "text": "    }"
    },
    {
      "type": "code_block",
      "text": "}"
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Content Elements"
    },
    {
      "type": "paragraph",
      "text": "The JSON output can include various content elements:"
    },
    {
      "type": "heading",
      "level": 4,
      "text": "Heading"
    },
    {
      "type": "code_block",
      "text": "{    \"type\": \"heading\",    \"level\": number,  // 1-6    \"text\": string}"
    },
    {
      "type": "code_block",
      "text": "{    \"type\": \"heading\",    \"level\": number,  // 1-6    \"text\": string}"
    },
    {
      "type": "code_block",
      "text": "{"
    },
    {
      "type": "code_block",
      "text": "    \"type\": \"heading\","
    },
    {
      "type": "code_block",
      "text": "    \"level\": number,  // 1-6"
    },
    {
      "type": "code_block",
      "text": "    \"text\": string"
    },
    {
      "type": "code_block",
      "text": "}"
    },
    {
      "type": "heading",
      "level": 4,
      "text": "Paragraph"
    },
    {
      "type": "code_block",
      "text": "{    \"type\": \"paragraph\",    \"text\": string}"
    },
    {
      "type": "code_block",
      "text": "{    \"type\": \"paragraph\",    \"text\": string}"
    },
    {
      "type": "code_block",
      "text": "{"
    },
    {
      "type": "code_block",
      "text": "    \"type\": \"paragraph\","
    },
    {
      "type": "code_block",
      "text": "    \"text\": string"
    },
    {
      "type": "code_block",
      "text": "}"
    },
    {
      "type": "heading",
      "level": 4,
      "text": "List"
    },
    {
      "type": "code_block",
      "text": "{    \"type\": \"list\",    \"list_type\": \"ordered\" | \"unordered\",    \"level\": number,    \"items\": Array<ListItem>}"
    },
    {
      "type": "code_block",
      "text": "{    \"type\": \"list\",    \"list_type\": \"ordered\" | \"unordered\",    \"level\": number,    \"items\": Array<ListItem>}"
    },
    {
      "type": "code_block",
      "text": "{"
    },
    {
      "type": "code_block",
      "text": "    \"type\": \"list\","
    },
    {
      "type": "code_block",
      "text": "    \"list_type\": \"ordered\" | \"unordered\","
    },
    {
      "type": "code_block",
      "text": "    \"level\": number,"
    },
    {
      "type": "code_block",
      "text": "    \"items\": Array<ListItem>"
    },
    {
      "type": "code_block",
      "text": "}"
    },
    {
      "type": "heading",
      "level": 4,
      "text": "List Item"
    },
    {
      "type": "code_block",
      "text": "{    \"text\": string,    \"type\"?: \"sublist\",    \"list_type\"?: \"ordered\" | \"unordered\",    \"items\"?: Array<ListItem>}"
    },
    {
      "type": "code_block",
      "text": "{    \"text\": string,    \"type\"?: \"sublist\",    \"list_type\"?: \"ordered\" | \"unordered\",    \"items\"?: Array<ListItem>}"
    },
    {
      "type": "code_block",
      "text": "{"
    },
    {
      "type": "code_block",
      "text": "    \"text\": string,"
    },
    {
      "type": "code_block",
      "text": "    \"type\"?: \"sublist\","
    },
    {
      "type": "code_block",
      "text": "    \"list_type\"?: \"ordered\" | \"unordered\","
    },
    {
      "type": "code_block",
      "text": "    \"items\"?: Array<ListItem>"
    },
    {
      "type": "code_block",
      "text": "}"
    },
    {
      "type": "heading",
      "level": 4,
      "text": "Blockquote"
    },
    {
      "type": "code_block",
      "text": "{    \"type\": \"blockquote\",    \"text\": string}"
    },
    {
      "type": "code_block",
      "text": "{    \"type\": \"blockquote\",    \"text\": string}"
    },
    {
      "type": "code_block",
      "text": "{"
    },
    {
      "type": "code_block",
      "text": "    \"type\": \"blockquote\","
    },
    {
      "type": "code_block",
      "text": "    \"text\": string"
    },
    {
      "type": "code_block",
      "text": "}"
    },
    {
      "type": "heading",
      "level": 4,
      "text": "Section"
    },
    {
      "type": "code_block",
      "text": "{    \"type\": \"section\",    \"level\": number,    \"content\": Array<ContentElement>}"
    },
    {
      "type": "code_block",
      "text": "{    \"type\": \"section\",    \"level\": number,    \"content\": Array<ContentElement>}"
    },
    {
      "type": "code_block",
      "text": "{"
    },
    {
      "type": "code_block",
      "text": "    \"type\": \"section\","
    },
    {
      "type": "code_block",
      "text": "    \"level\": number,"
    },
    {
      "type": "code_block",
      "text": "    \"content\": Array<ContentElement>"
    },
    {
      "type": "code_block",
      "text": "}"
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Metadata"
    },
    {
      "type": "code_block",
      "text": "{    \"fetched_at\": string,  // ISO format timestamp    \"url\": string,    \"preserve_styles\": boolean}"
    },
    {
      "type": "code_block",
      "text": "{    \"fetched_at\": string,  // ISO format timestamp    \"url\": string,    \"preserve_styles\": boolean}"
    },
    {
      "type": "code_block",
      "text": "{"
    },
    {
      "type": "code_block",
      "text": "    \"fetched_at\": string,  // ISO format timestamp"
    },
    {
      "type": "code_block",
      "text": "    \"url\": string,"
    },
    {
      "type": "code_block",
      "text": "    \"preserve_styles\": boolean"
    },
    {
      "type": "code_block",
      "text": "}"
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Style Preservation"
    },
    {
      "type": "paragraph",
      "text": "When preserve_styles is enabled, certain HTML style elements are preserved in text content:"
    },
    {
      "type": "paragraph",
      "text": "Preserved tags include:"
    },
    {
      "type": "list",
      "list_type": "unordered",
      "level": 1,
      "items": [
        {
          "text": "<b> , <strong> - Bold text"
        },
        {
          "text": "<i> , <em> - Italic text"
        },
        {
          "text": "<code> - Code snippets"
        },
        {
          "text": "<mark> - Highlighted text"
        },
        {
          "text": "And others defined in configuration"
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": "Examples"
    },
    {
      "type": "heading",
      "level": 4,
      "text": "Basic Article"
    },
    {
      "type": "code_block",
      "text": "{    \"title\": \"Sample Article\",    \"content\": [        {            \"type\": \"heading\",            \"level\": 1,            \"text\": \"Main Title\"        },        {            \"type\": \"paragraph\",            \"text\": \"Article introduction paragraph.\"        }    ],    \"metadata\": {        \"fetched_at\": \"2025-01-18 22:18:18\",        \"url\": \"https://example.com/article\",        \"preserve_styles\": false    }}"
    },
    {
      "type": "code_block",
      "text": "{    \"title\": \"Sample Article\",    \"content\": [        {            \"type\": \"heading\",            \"level\": 1,            \"text\": \"Main Title\"        },        {            \"type\": \"paragraph\",            \"text\": \"Article introduction paragraph.\"        }    ],    \"metadata\": {        \"fetched_at\": \"2025-01-18 22:18:18\",        \"url\": \"https://example.com/article\",        \"preserve_styles\": false    }}"
    },
    {
      "type": "code_block",
      "text": "{"
    },
    {
      "type": "code_block",
      "text": "    \"title\": \"Sample Article\","
    },
    {
      "type": "code_block",
      "text": "    \"content\": ["
    },
    {
      "type": "code_block",
      "text": "        {"
    },
    {
      "type": "code_block",
      "text": "            \"type\": \"heading\","
    },
    {
      "type": "code_block",
      "text": "            \"level\": 1,"
    },
    {
      "type": "code_block",
      "text": "            \"text\": \"Main Title\""
    },
    {
      "type": "code_block",
      "text": "        },"
    },
    {
      "type": "code_block",
      "text": "        {"
    },
    {
      "type": "code_block",
      "text": "            \"type\": \"paragraph\","
    },
    {
      "type": "code_block",
      "text": "            \"text\": \"Article introduction paragraph.\""
    },
    {
      "type": "code_block",
      "text": "        }"
    },
    {
      "type": "code_block",
      "text": "    ],"
    },
    {
      "type": "code_block",
      "text": "    \"metadata\": {"
    },
    {
      "type": "code_block",
      "text": "        \"fetched_at\": \"2025-01-18 22:18:18\","
    },
    {
      "type": "code_block",
      "text": "        \"url\": \"https://example.com/article\","
    },
    {
      "type": "code_block",
      "text": "        \"preserve_styles\": false"
    },
    {
      "type": "code_block",
      "text": "    }"
    },
    {
      "type": "code_block",
      "text": "}"
    },
    {
      "type": "heading",
      "level": 4,
      "text": "Complex Structure"
    },
    {
      "type": "code_block",
      "text": "{    \"title\": \"Nested Content Example\",    \"content\": [        {            \"type\": \"section\",            \"level\": 1,            \"content\": [                {                    \"type\": \"heading\",                    \"level\": 2,                    \"text\": \"Section Title\"                },                {                    \"type\": \"list\",                    \"list_type\": \"unordered\",                    \"level\": 1,                    \"items\": [                        {                            \"text\": \"First item\"                        },                        {                            \"text\": \"Second item\",                            \"type\": \"sublist\",                            \"list_type\": \"ordered\",                            \"items\": [                                {                                    \"text\": \"Sub-item 1\"                                },                                {                                    \"text\": \"Sub-item 2\"                                }                            ]                        }                    ]                }            ]        }    ],    \"metadata\": {        \"fetched_at\": \"2025-01-18 22:18:18\",        \"url\": \"https://example.com/nested\",        \"preserve_styles\": true    }}"
    },
    {
      "type": "code_block",
      "text": "{    \"title\": \"Nested Content Example\",    \"content\": [        {            \"type\": \"section\",            \"level\": 1,            \"content\": [                {                    \"type\": \"heading\",                    \"level\": 2,                    \"text\": \"Section Title\"                },                {                    \"type\": \"list\",                    \"list_type\": \"unordered\",                    \"level\": 1,                    \"items\": [                        {                            \"text\": \"First item\"                        },                        {                            \"text\": \"Second item\",                            \"type\": \"sublist\",                            \"list_type\": \"ordered\",                            \"items\": [                                {                                    \"text\": \"Sub-item 1\"                                },                                {                                    \"text\": \"Sub-item 2\"                                }                            ]                        }                    ]                }            ]        }    ],    \"metadata\": {        \"fetched_at\": \"2025-01-18 22:18:18\",        \"url\": \"https://example.com/nested\",        \"preserve_styles\": true    }}"
    },
    {
      "type": "code_block",
      "text": "{"
    },
    {
      "type": "code_block",
      "text": "    \"title\": \"Nested Content Example\","
    },
    {
      "type": "code_block",
      "text": "    \"content\": ["
    },
    {
      "type": "code_block",
      "text": "        {"
    },
    {
      "type": "code_block",
      "text": "            \"type\": \"section\","
    },
    {
      "type": "code_block",
      "text": "            \"level\": 1,"
    },
    {
      "type": "code_block",
      "text": "            \"content\": ["
    },
    {
      "type": "code_block",
      "text": "                {"
    },
    {
      "type": "code_block",
      "text": "                    \"type\": \"heading\","
    },
    {
      "type": "code_block",
      "text": "                    \"level\": 2,"
    },
    {
      "type": "code_block",
      "text": "                    \"text\": \"Section Title\""
    },
    {
      "type": "code_block",
      "text": "                },"
    },
    {
      "type": "code_block",
      "text": "                {"
    },
    {
      "type": "code_block",
      "text": "                    \"type\": \"list\","
    },
    {
      "type": "code_block",
      "text": "                    \"list_type\": \"unordered\","
    },
    {
      "type": "code_block",
      "text": "                    \"level\": 1,"
    },
    {
      "type": "code_block",
      "text": "                    \"items\": ["
    },
    {
      "type": "code_block",
      "text": "                        {"
    },
    {
      "type": "code_block",
      "text": "                            \"text\": \"First item\""
    },
    {
      "type": "code_block",
      "text": "                        },"
    },
    {
      "type": "code_block",
      "text": "                        {"
    },
    {
      "type": "code_block",
      "text": "                            \"text\": \"Second item\","
    },
    {
      "type": "code_block",
      "text": "                            \"type\": \"sublist\","
    },
    {
      "type": "code_block",
      "text": "                            \"list_type\": \"ordered\","
    },
    {
      "type": "code_block",
      "text": "                            \"items\": ["
    },
    {
      "type": "code_block",
      "text": "                                {"
    },
    {
      "type": "code_block",
      "text": "                                    \"text\": \"Sub-item 1\""
    },
    {
      "type": "code_block",
      "text": "                                },"
    },
    {
      "type": "code_block",
      "text": "                                {"
    },
    {
      "type": "code_block",
      "text": "                                    \"text\": \"Sub-item 2\""
    },
    {
      "type": "code_block",
      "text": "                                }"
    },
    {
      "type": "code_block",
      "text": "                            ]"
    },
    {
      "type": "code_block",
      "text": "                        }"
    },
    {
      "type": "code_block",
      "text": "                    ]"
    },
    {
      "type": "code_block",
      "text": "                }"
    },
    {
      "type": "code_block",
      "text": "            ]"
    },
    {
      "type": "code_block",
      "text": "        }"
    },
    {
      "type": "code_block",
      "text": "    ],"
    },
    {
      "type": "code_block",
      "text": "    \"metadata\": {"
    },
    {
      "type": "code_block",
      "text": "        \"fetched_at\": \"2025-01-18 22:18:18\","
    },
    {
      "type": "code_block",
      "text": "        \"url\": \"https://example.com/nested\","
    },
    {
      "type": "code_block",
      "text": "        \"preserve_styles\": true"
    },
    {
      "type": "code_block",
      "text": "    }"
    },
    {
      "type": "code_block",
      "text": "}"
    },
    {
      "type": "heading",
      "level": 2,
      "text": "Project Structure"
    },
    {
      "type": "paragraph",
      "text": "The web2json distribution package consists of the following:"
    },
    {
      "type": "code_block",
      "text": ".‚îú‚îÄ‚îÄ LICENSE                       # License and copyright information‚îú‚îÄ‚îÄ README.md                     # Project overview and instructions‚îú‚îÄ‚îÄ setup.py                      # Project setup script for packaging and distribution‚îú‚îÄ‚îÄ windows_setup.py   # Post-setup supplemental script for Windows-specific finalizing actions‚îú‚îÄ‚îÄ requirements                  # Project dependencies‚îÇ   ‚îú‚îÄ‚îÄ development.txt           # Development environment requirements‚îÇ   ‚îî‚îÄ‚îÄ production.txt            # Minimal production requirements‚îú‚îÄ‚îÄ tests                         # Test suite directory (Note: run via 'python -m pytest')‚îÇ   ‚îú‚îÄ‚îÄ __init__.py               # Test package initialization, shared fixtures‚îÇ   ‚îú‚îÄ‚îÄ fixtures                  # Test data directory‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ sample_pages          # Sample HTML pages for testing‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ article.html      # Simple article layout‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ blog_post.html    # Blog post with metadata‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ complex_layout.html  # Complex nested structure‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ sample_urls.txt       # Test URLs for URL processor‚îÇ   ‚îú‚îÄ‚îÄ test_file_handler.py      # File handling unit tests‚îÇ   ‚îú‚îÄ‚îÄ test_html_parser.py       # HTML parsing unit tests‚îÇ   ‚îú‚îÄ‚îÄ test_json_converter.py    # JSON conversion unit tests‚îÇ   ‚îî‚îÄ‚îÄ test_url_processor.py     # URL processing unit tests‚îî‚îÄ‚îÄ web2json                      # Main package directory    ‚îú‚îÄ‚îÄ __init__.py               # Package initialization and exports    ‚îú‚îÄ‚îÄ __main__.py               # Entry point for running as module    ‚îú‚îÄ‚îÄ cli.py                    # Command-line interface implementation    ‚îú‚îÄ‚îÄ config.py                 # Configuration constants and settings    ‚îú‚îÄ‚îÄ core                      # Core functionality modules    ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py           # Core package initialization    ‚îÇ   ‚îú‚îÄ‚îÄ html_parser.py        # HTML content extraction and structuring    ‚îÇ   ‚îú‚îÄ‚îÄ json_converter.py     # HTML to JSON conversion logic    ‚îÇ   ‚îî‚îÄ‚îÄ url_processor.py      # URL validation and content fetching    ‚îú‚îÄ‚îÄ data                      # Data models and schemas    ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py           # Data package initialization    ‚îÇ   ‚îî‚îÄ‚îÄ schemas.py            # JSON structure definitions    ‚îú‚îÄ‚îÄ exceptions.py             # Custom exception classes    ‚îî‚îÄ‚îÄ utils                     # Utility functions        ‚îú‚îÄ‚îÄ __init__.py           # Utils package initialization        ‚îú‚îÄ‚îÄ file_handler.py       # File system operations        ‚îî‚îÄ‚îÄ logging_config.py     # Logging setup and configuration"
    },
    {
      "type": "code_block",
      "text": ".‚îú‚îÄ‚îÄ LICENSE                       # License and copyright information‚îú‚îÄ‚îÄ README.md                     # Project overview and instructions‚îú‚îÄ‚îÄ setup.py                      # Project setup script for packaging and distribution‚îú‚îÄ‚îÄ windows_setup.py   # Post-setup supplemental script for Windows-specific finalizing actions‚îú‚îÄ‚îÄ requirements                  # Project dependencies‚îÇ   ‚îú‚îÄ‚îÄ development.txt           # Development environment requirements‚îÇ   ‚îî‚îÄ‚îÄ production.txt            # Minimal production requirements‚îú‚îÄ‚îÄ tests                         # Test suite directory (Note: run via 'python -m pytest')‚îÇ   ‚îú‚îÄ‚îÄ __init__.py               # Test package initialization, shared fixtures‚îÇ   ‚îú‚îÄ‚îÄ fixtures                  # Test data directory‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ sample_pages          # Sample HTML pages for testing‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ article.html      # Simple article layout‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ blog_post.html    # Blog post with metadata‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ complex_layout.html  # Complex nested structure‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ sample_urls.txt       # Test URLs for URL processor‚îÇ   ‚îú‚îÄ‚îÄ test_file_handler.py      # File handling unit tests‚îÇ   ‚îú‚îÄ‚îÄ test_html_parser.py       # HTML parsing unit tests‚îÇ   ‚îú‚îÄ‚îÄ test_json_converter.py    # JSON conversion unit tests‚îÇ   ‚îî‚îÄ‚îÄ test_url_processor.py     # URL processing unit tests‚îî‚îÄ‚îÄ web2json                      # Main package directory    ‚îú‚îÄ‚îÄ __init__.py               # Package initialization and exports    ‚îú‚îÄ‚îÄ __main__.py               # Entry point for running as module    ‚îú‚îÄ‚îÄ cli.py                    # Command-line interface implementation    ‚îú‚îÄ‚îÄ config.py                 # Configuration constants and settings    ‚îú‚îÄ‚îÄ core                      # Core functionality modules    ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py           # Core package initialization    ‚îÇ   ‚îú‚îÄ‚îÄ html_parser.py        # HTML content extraction and structuring    ‚îÇ   ‚îú‚îÄ‚îÄ json_converter.py     # HTML to JSON conversion logic    ‚îÇ   ‚îî‚îÄ‚îÄ url_processor.py      # URL validation and content fetching    ‚îú‚îÄ‚îÄ data                      # Data models and schemas    ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py           # Data package initialization    ‚îÇ   ‚îî‚îÄ‚îÄ schemas.py            # JSON structure definitions    ‚îú‚îÄ‚îÄ exceptions.py             # Custom exception classes    ‚îî‚îÄ‚îÄ utils                     # Utility functions        ‚îú‚îÄ‚îÄ __init__.py           # Utils package initialization        ‚îú‚îÄ‚îÄ file_handler.py       # File system operations        ‚îî‚îÄ‚îÄ logging_config.py     # Logging setup and configuration"
    },
    {
      "type": "code_block",
      "text": "."
    },
    {
      "type": "code_block",
      "text": "‚îú‚îÄ‚îÄ LICENSE                       # License and copyright information"
    },
    {
      "type": "code_block",
      "text": "‚îú‚îÄ‚îÄ README.md                     # Project overview and instructions"
    },
    {
      "type": "code_block",
      "text": "‚îú‚îÄ‚îÄ setup.py                      # Project setup script for packaging and distribution"
    },
    {
      "type": "code_block",
      "text": "‚îú‚îÄ‚îÄ windows_setup.py   # Post-setup supplemental script for Windows-specific finalizing actions"
    },
    {
      "type": "code_block",
      "text": "‚îú‚îÄ‚îÄ requirements                  # Project dependencies"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îú‚îÄ‚îÄ development.txt           # Development environment requirements"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îî‚îÄ‚îÄ production.txt            # Minimal production requirements"
    },
    {
      "type": "code_block",
      "text": "‚îú‚îÄ‚îÄ tests                         # Test suite directory (Note: run via 'python -m pytest')"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îú‚îÄ‚îÄ __init__.py               # Test package initialization, shared fixtures"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îú‚îÄ‚îÄ fixtures                  # Test data directory"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ sample_pages          # Sample HTML pages for testing"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ article.html      # Simple article layout"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ blog_post.html    # Blog post with metadata"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ complex_layout.html  # Complex nested structure"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ sample_urls.txt       # Test URLs for URL processor"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îú‚îÄ‚îÄ test_file_handler.py      # File handling unit tests"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îú‚îÄ‚îÄ test_html_parser.py       # HTML parsing unit tests"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îú‚îÄ‚îÄ test_json_converter.py    # JSON conversion unit tests"
    },
    {
      "type": "code_block",
      "text": "‚îÇ   ‚îî‚îÄ‚îÄ test_url_processor.py     # URL processing unit tests"
    },
    {
      "type": "code_block",
      "text": "‚îî‚îÄ‚îÄ web2json                      # Main package directory"
    },
    {
      "type": "code_block",
      "text": "    ‚îú‚îÄ‚îÄ __init__.py               # Package initialization and exports"
    },
    {
      "type": "code_block",
      "text": "    ‚îú‚îÄ‚îÄ __main__.py               # Entry point for running as module"
    },
    {
      "type": "code_block",
      "text": "    ‚îú‚îÄ‚îÄ cli.py                    # Command-line interface implementation"
    },
    {
      "type": "code_block",
      "text": "    ‚îú‚îÄ‚îÄ config.py                 # Configuration constants and settings"
    },
    {
      "type": "code_block",
      "text": "    ‚îú‚îÄ‚îÄ core                      # Core functionality modules"
    },
    {
      "type": "code_block",
      "text": "    ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py           # Core package initialization"
    },
    {
      "type": "code_block",
      "text": "    ‚îÇ   ‚îú‚îÄ‚îÄ html_parser.py        # HTML content extraction and structuring"
    },
    {
      "type": "code_block",
      "text": "    ‚îÇ   ‚îú‚îÄ‚îÄ json_converter.py     # HTML to JSON conversion logic"
    },
    {
      "type": "code_block",
      "text": "    ‚îÇ   ‚îî‚îÄ‚îÄ url_processor.py      # URL validation and content fetching"
    },
    {
      "type": "code_block",
      "text": "    ‚îú‚îÄ‚îÄ data                      # Data models and schemas"
    },
    {
      "type": "code_block",
      "text": "    ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py           # Data package initialization"
    },
    {
      "type": "code_block",
      "text": "    ‚îÇ   ‚îî‚îÄ‚îÄ schemas.py            # JSON structure definitions"
    },
    {
      "type": "code_block",
      "text": "    ‚îú‚îÄ‚îÄ exceptions.py             # Custom exception classes"
    },
    {
      "type": "code_block",
      "text": "    ‚îî‚îÄ‚îÄ utils                     # Utility functions"
    },
    {
      "type": "code_block",
      "text": "        ‚îú‚îÄ‚îÄ __init__.py           # Utils package initialization"
    },
    {
      "type": "code_block",
      "text": "        ‚îú‚îÄ‚îÄ file_handler.py       # File system operations"
    },
    {
      "type": "code_block",
      "text": "        ‚îî‚îÄ‚îÄ logging_config.py     # Logging setup and configuration"
    },
    {
      "type": "heading",
      "level": 2,
      "text": "About web2json"
    },
    {
      "type": "paragraph",
      "text": "web2json was created by Ervins Strauhmanis and is licensed under the MIT License. This means you are free to use, modify, and share it as needed."
    },
    {
      "type": "paragraph",
      "text": "Current version: 1.0.0."
    },
    {
      "type": "heading",
      "level": 2,
      "text": "Need Help?"
    },
    {
      "type": "paragraph",
      "text": "If something isn‚Äôt working as expected or you have ideas for new features, please file an Issue on GitHub."
    },
    {
      "type": "heading",
      "level": 2,
      "text": "Coffee!"
    },
    {
      "type": "paragraph",
      "text": "Loving how web2json smooths out your workflow? Consider a coffee-sized thank you to the developer who made it possible!"
    },
    {
      "type": "paragraph",
      "text": "Last updated: Mar 24, 2025"
    },
    {
      "type": "code_block",
      "text": "mkdir -p ~/Tools"
    },
    {
      "type": "code_block",
      "text": "mkdir -p ~/Tools"
    },
    {
      "type": "code_block",
      "text": "cd ~/Downloads"
    },
    {
      "type": "code_block",
      "text": "cd ~/Downloads"
    },
    {
      "type": "code_block",
      "text": "tar -xzvf web2json.tar.gz"
    },
    {
      "type": "code_block",
      "text": "tar -xzvf web2json.tar.gz"
    },
    {
      "type": "code_block",
      "text": "mv web2json ~/Tools/web2json"
    },
    {
      "type": "code_block",
      "text": "mv web2json ~/Tools/web2json"
    },
    {
      "type": "code_block",
      "text": "cd ~/Tools/web2json"
    },
    {
      "type": "code_block",
      "text": "cd ~/Tools/web2json"
    },
    {
      "type": "code_block",
      "text": "python3 -m venv .venv"
    },
    {
      "type": "code_block",
      "text": "python3 -m venv .venv"
    },
    {
      "type": "code_block",
      "text": "source .venv/bin/activate"
    },
    {
      "type": "code_block",
      "text": "source .venv/bin/activate"
    },
    {
      "type": "code_block",
      "text": "pip install -e ."
    },
    {
      "type": "code_block",
      "text": "pip install -e ."
    },
    {
      "type": "code_block",
      "text": "web2json() {  (cd ~/Tools/web2json && source .venv/bin/activate && python -m web2json \"$@\" && deactivate)}"
    },
    {
      "type": "code_block",
      "text": "web2json() {  (cd ~/Tools/web2json && source .venv/bin/activate && python -m web2json \"$@\" && deactivate)}"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://resoltico.com/en/tools/web2json/ -o test_output"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://resoltico.com/en/tools/web2json/ -o test_output"
    },
    {
      "type": "code_block",
      "text": "mkdir %USERPROFILE%\\Tools"
    },
    {
      "type": "code_block",
      "text": "mkdir %USERPROFILE%\\Tools"
    },
    {
      "type": "code_block",
      "text": "cd %USERPROFILE%\\Downloads"
    },
    {
      "type": "code_block",
      "text": "cd %USERPROFILE%\\Downloads"
    },
    {
      "type": "code_block",
      "text": "tar -xzvf web2json.tar.gz"
    },
    {
      "type": "code_block",
      "text": "tar -xzvf web2json.tar.gz"
    },
    {
      "type": "code_block",
      "text": "move \"web2json\" \"%USERPROFILE%\\Tools\\web2json\""
    },
    {
      "type": "code_block",
      "text": "move \"web2json\" \"%USERPROFILE%\\Tools\\web2json\""
    },
    {
      "type": "code_block",
      "text": "cd %USERPROFILE%\\Tools\\web2json"
    },
    {
      "type": "code_block",
      "text": "cd %USERPROFILE%\\Tools\\web2json"
    },
    {
      "type": "code_block",
      "text": "python -m venv .venv"
    },
    {
      "type": "code_block",
      "text": "python -m venv .venv"
    },
    {
      "type": "code_block",
      "text": ".venv\\Scripts\\activate"
    },
    {
      "type": "code_block",
      "text": ".venv\\Scripts\\activate"
    },
    {
      "type": "code_block",
      "text": "pip install -e ."
    },
    {
      "type": "code_block",
      "text": "pip install -e ."
    },
    {
      "type": "code_block",
      "text": "web2json -u https://resoltico.com/en/tools/web2json/ -o test_output"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://resoltico.com/en/tools/web2json/ -o test_output"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com/article"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com/article"
    },
    {
      "type": "code_block",
      "text": "web2json -f urls.txt"
    },
    {
      "type": "code_block",
      "text": "web2json -f urls.txt"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com/article -o my_article"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com/article -o my_article"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com --output-dir ~/Downloads"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com --output-dir ~/Downloads"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com --output-dir %USERPROFILE%\\Downloads"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com --output-dir %USERPROFILE%\\Downloads"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com --preserve-styles"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com --preserve-styles"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com -v"
    },
    {
      "type": "code_block",
      "text": "web2json -u https://example.com -v"
    }
  ],
  "metadata": {
    "fetched_at": "2025-03-24 15:11:12",
    "url": "https://resoltico.com/en/tools/web2json/",
    "preserve_styles": false
  }
}